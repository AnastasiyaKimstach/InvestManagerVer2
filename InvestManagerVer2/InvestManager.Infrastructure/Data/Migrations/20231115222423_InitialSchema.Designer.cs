// <auto-generated />
using System;
using InvestManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestManager.Infrastructure.Data.Migrations
{
    [DbContext(typeof(InvestManagerContext))]
    [Migration("20231115222423_InitialSchema")]
    partial class InitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Asset", b =>
                {
                    b.Property<Guid>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CurrentPrice")
                        .HasColumnType("real");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssetID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.AssetInPortfolio", b =>
                {
                    b.Property<Guid>("AssetInPortfolioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategotyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortfolioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("AssetInPortfolioID");

                    b.HasIndex("AssetId");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PortfolioID");

                    b.ToTable("AssetsInPortfolio");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.ChangePrice", b =>
                {
                    b.Property<Guid>("ChangePriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ChangePriceID");

                    b.ToTable("ChangesPrice");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Client", b =>
                {
                    b.Property<Guid>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmploymentStatusSatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pathronumic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientID");

                    b.HasIndex("CountryID");

                    b.HasIndex("EmploymentStatusSatusID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Country", b =>
                {
                    b.Property<Guid>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.EmploymentStatus", b =>
                {
                    b.Property<Guid>("SatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SatusID");

                    b.ToTable("EmploymentStatuses");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.InvestPortfolio", b =>
                {
                    b.Property<Guid>("PortfolioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvestmentHorisont")
                        .HasColumnType("int");

                    b.Property<int>("PortfolioGoal")
                        .HasColumnType("int");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortfolioID");

                    b.HasIndex("ClientID");

                    b.ToTable("InvestPortfolios");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Statistics", b =>
                {
                    b.Property<Guid>("StatisticID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PortfolioCost")
                        .HasColumnType("real");

                    b.Property<Guid>("PortfolioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("PortfolioProfitability")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StatisticID");

                    b.HasIndex("PortfolioID");

                    b.ToTable("Statistices");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<Guid>("AssetInPortfolioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvestPortfolioPortfolioID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PortfolionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("TransactionID");

                    b.HasIndex("AssetInPortfolioID");

                    b.HasIndex("InvestPortfolioPortfolioID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.AssetInPortfolio", b =>
                {
                    b.HasOne("InvestManager.ApplicatoinCore.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestManager.ApplicatoinCore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("InvestManager.ApplicatoinCore.Models.InvestPortfolio", "Portfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Category");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Client", b =>
                {
                    b.HasOne("InvestManager.ApplicatoinCore.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestManager.ApplicatoinCore.Models.EmploymentStatus", "EmploymentStatus")
                        .WithMany()
                        .HasForeignKey("EmploymentStatusSatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("EmploymentStatus");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.InvestPortfolio", b =>
                {
                    b.HasOne("InvestManager.ApplicatoinCore.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Statistics", b =>
                {
                    b.HasOne("InvestManager.ApplicatoinCore.Models.InvestPortfolio", "Portfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("InvestManager.ApplicatoinCore.Models.Transaction", b =>
                {
                    b.HasOne("InvestManager.ApplicatoinCore.Models.AssetInPortfolio", "AssetInPortfolio")
                        .WithMany()
                        .HasForeignKey("AssetInPortfolioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestManager.ApplicatoinCore.Models.InvestPortfolio", "InvestPortfolio")
                        .WithMany()
                        .HasForeignKey("InvestPortfolioPortfolioID");

                    b.Navigation("AssetInPortfolio");

                    b.Navigation("InvestPortfolio");
                });
#pragma warning restore 612, 618
        }
    }
}
